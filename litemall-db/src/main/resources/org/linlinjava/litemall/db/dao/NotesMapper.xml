<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.NotesMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.Notes">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="temp_id" jdbcType="INTEGER" property="tempId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="from_userid" jdbcType="INTEGER" property="fromUserid" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="infoid" jdbcType="INTEGER" property="infoid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, temp_id, `type`, user_id, from_userid, create_date, infoid, content, `no`, `status`, 
    memo
  </sql>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.NotesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from notes
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from notes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.NotesExample">
    delete from notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.Notes">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notes (temp_id, `type`, user_id, 
      from_userid, create_date, infoid, 
      content, `no`, `status`, 
      memo)
    values (#{tempId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{fromUserid,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{infoid,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.Notes">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tempId != null">
        temp_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fromUserid != null">
        from_userid,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="infoid != null">
        infoid,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="no != null">
        `no`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tempId != null">
        #{tempId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fromUserid != null">
        #{fromUserid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="infoid != null">
        #{infoid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.NotesExample" resultType="java.lang.Long">
    select count(*) from notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notes
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tempId != null">
        temp_id = #{record.tempId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.fromUserid != null">
        from_userid = #{record.fromUserid,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.infoid != null">
        infoid = #{record.infoid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null">
        `no` = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notes
    set id = #{record.id,jdbcType=INTEGER},
      temp_id = #{record.tempId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      from_userid = #{record.fromUserid,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      infoid = #{record.infoid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      `no` = #{record.no,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.Notes">
    update notes
    <set>
      <if test="tempId != null">
        temp_id = #{tempId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fromUserid != null">
        from_userid = #{fromUserid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="infoid != null">
        infoid = #{infoid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        `no` = #{no,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.Notes">
    update notes
    set temp_id = #{tempId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      from_userid = #{fromUserid,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      infoid = #{infoid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      `no` = #{no,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.NotesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from notes
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>