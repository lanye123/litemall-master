<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.ArticleNotesMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.ArticleNotes">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="artile_id" jdbcType="INTEGER" property="artileId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="sort_no" jdbcType="INTEGER" property="sortNo" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="brief" jdbcType="VARCHAR" property="brief" />
    <result column="article_name" jdbcType="VARCHAR" property="articleName" />
    <result column="daodu" jdbcType="VARCHAR" property="daodu" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="photo_url" jdbcType="VARCHAR" property="photoUrl" />
    <result column="photo_name" jdbcType="VARCHAR" property="photoName" />
    <result column="render" jdbcType="INTEGER" property="render" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.linlinjava.litemall.db.domain.ArticleNotes">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, artile_id, `name`, `no`, create_date, sort_no, `status`, brief, article_name, 
    daodu, author, photo_url, photo_name, render
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.linlinjava.litemall.db.domain.ArticleNotesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.ArticleNotesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from article_notes
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_notes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from article_notes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article_notes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.ArticleNotesExample">
    delete from article_notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.ArticleNotes">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article_notes (artile_id, `name`, `no`, 
      create_date, sort_no, `status`, 
      brief, article_name, daodu, 
      author, photo_url, photo_name, 
      render, content)
    values (#{artileId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{sortNo,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{brief,jdbcType=VARCHAR}, #{articleName,jdbcType=VARCHAR}, #{daodu,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{photoUrl,jdbcType=VARCHAR}, #{photoName,jdbcType=VARCHAR}, 
      #{render,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.ArticleNotes">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article_notes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="artileId != null">
        artile_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="no != null">
        `no`,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="sortNo != null">
        sort_no,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="brief != null">
        brief,
      </if>
      <if test="articleName != null">
        article_name,
      </if>
      <if test="daodu != null">
        daodu,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="photoUrl != null">
        photo_url,
      </if>
      <if test="photoName != null">
        photo_name,
      </if>
      <if test="render != null">
        render,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="artileId != null">
        #{artileId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sortNo != null">
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="brief != null">
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="articleName != null">
        #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="daodu != null">
        #{daodu,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null">
        #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="photoName != null">
        #{photoName,jdbcType=VARCHAR},
      </if>
      <if test="render != null">
        #{render,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.ArticleNotesExample" resultType="java.lang.Long">
    select count(*) from article_notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article_notes
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.artileId != null">
        artile_id = #{record.artileId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null">
        `no` = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sortNo != null">
        sort_no = #{record.sortNo,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.brief != null">
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.articleName != null">
        article_name = #{record.articleName,jdbcType=VARCHAR},
      </if>
      <if test="record.daodu != null">
        daodu = #{record.daodu,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.photoUrl != null">
        photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.photoName != null">
        photo_name = #{record.photoName,jdbcType=VARCHAR},
      </if>
      <if test="record.render != null">
        render = #{record.render,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article_notes
    set id = #{record.id,jdbcType=INTEGER},
      artile_id = #{record.artileId,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `no` = #{record.no,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      sort_no = #{record.sortNo,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      brief = #{record.brief,jdbcType=VARCHAR},
      article_name = #{record.articleName,jdbcType=VARCHAR},
      daodu = #{record.daodu,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      photo_name = #{record.photoName,jdbcType=VARCHAR},
      render = #{record.render,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article_notes
    set id = #{record.id,jdbcType=INTEGER},
      artile_id = #{record.artileId,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `no` = #{record.no,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      sort_no = #{record.sortNo,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      brief = #{record.brief,jdbcType=VARCHAR},
      article_name = #{record.articleName,jdbcType=VARCHAR},
      daodu = #{record.daodu,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      photo_name = #{record.photoName,jdbcType=VARCHAR},
      render = #{record.render,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.ArticleNotes">
    update article_notes
    <set>
      <if test="artileId != null">
        artile_id = #{artileId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        `no` = #{no,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sortNo != null">
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="brief != null">
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="articleName != null">
        article_name = #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="daodu != null">
        daodu = #{daodu,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null">
        photo_url = #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="photoName != null">
        photo_name = #{photoName,jdbcType=VARCHAR},
      </if>
      <if test="render != null">
        render = #{render,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.linlinjava.litemall.db.domain.ArticleNotes">
    update article_notes
    set artile_id = #{artileId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `no` = #{no,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      sort_no = #{sortNo,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      brief = #{brief,jdbcType=VARCHAR},
      article_name = #{articleName,jdbcType=VARCHAR},
      daodu = #{daodu,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      photo_name = #{photoName,jdbcType=VARCHAR},
      render = #{render,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.ArticleNotes">
    update article_notes
    set artile_id = #{artileId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `no` = #{no,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      sort_no = #{sortNo,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      brief = #{brief,jdbcType=VARCHAR},
      article_name = #{articleName,jdbcType=VARCHAR},
      daodu = #{daodu,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      photo_name = #{photoName,jdbcType=VARCHAR},
      render = #{render,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.ArticleNotesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from article_notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from article_notes
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="org.linlinjava.litemall.db.domain.ArticleNotesExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_notes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>